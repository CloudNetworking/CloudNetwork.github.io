<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://CloudNetwork.cc/2017/03/10/hello-world/</url>
      <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.qf.web.servlet;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.io.PrintWriter;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.jms.Session;</div><div class="line"><span class="keyword">import</span> javax.servlet.ServletException;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.qf.web.listener.MyListener;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DealServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">		 * Constructor of the object.</div><div class="line">		 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">DealServlet</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">super</span>();</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">	<span class="comment">/**</span></div><div class="line">		 * Destruction of the servlet. &lt;br&gt;</div><div class="line">		 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">super</span>.destroy(); <span class="comment">// Just puts "destroy" string in log</span></div><div class="line">		<span class="comment">// Put your code here</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">		 * The doGet method of the servlet. &lt;br&gt;</div><div class="line">		 *</div><div class="line">		 * This method is called when a form has its tag value method equals to get.</div><div class="line">		 * </div><div class="line">		 * <span class="doctag">@param</span> request the request send by the client to the server</div><div class="line">		 * <span class="doctag">@param</span> response the response send by the server to the client</div><div class="line">		 * <span class="doctag">@throws</span> ServletException if an error occurred</div><div class="line">		 * <span class="doctag">@throws</span> IOException if an error occurred</div><div class="line">		 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</div><div class="line">		<span class="keyword">this</span>.doPost(request, response);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">		 * The doPost method of the servlet. &lt;br&gt;</div><div class="line">		 *</div><div class="line">		 * This method is called when a form has its tag value method equals to post.</div><div class="line">		 * </div><div class="line">		 * <span class="doctag">@param</span> request the request send by the client to the server</div><div class="line">		 * <span class="doctag">@param</span> response the response send by the server to the client</div><div class="line">		 * <span class="doctag">@throws</span> ServletException if an error occurred</div><div class="line">		 * <span class="doctag">@throws</span> IOException if an error occurred</div><div class="line">		 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</div><div class="line">		request.setCharacterEncoding(<span class="string">"utf-8"</span>);</div><div class="line">		String type = request.getParameter(<span class="string">"type"</span>);</div><div class="line">		<span class="keyword">if</span> (<span class="string">"enter"</span>.equals(type)) &#123;<span class="comment">//代表用户上线</span></div><div class="line">			String name = request.getParameter(<span class="string">"uname"</span>);</div><div class="line">			MyListener listener =  <span class="keyword">new</span> MyListener();<span class="comment">//监听器对象在程序中被创建对象了（实例化）  ，不需要再web.xml文件中注册</span></div><div class="line">			listener.setName(name);</div><div class="line">			<span class="comment">//创建session</span></div><div class="line">			request.getSession().setAttribute(<span class="string">"lister"</span>, listener);<span class="comment">// ---  调用valueBound()</span></div><div class="line">			request.getSession().setAttribute(<span class="string">"name"</span>, name);<span class="comment">//不会调用valueBound</span></div><div class="line">			response.sendRedirect(<span class="string">"show.jsp"</span>);</div><div class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"logout"</span>.equals(type)) &#123;</div><div class="line">			<span class="comment">//退出系统</span></div><div class="line">			<span class="comment">//session失效  或者在session中移除自定义监听器</span></div><div class="line">			request.getSession().invalidate();</div><div class="line">			response.sendRedirect(<span class="string">"enter.jsp"</span>);</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line">		 * Initialization of the servlet. &lt;br&gt;</div><div class="line">		 *</div><div class="line">		 * <span class="doctag">@throws</span> ServletException if an error occurs</div><div class="line">		 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException </span>&#123;</div><div class="line">		<span class="comment">// Put your code here</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> Hexo教程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> aa </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Struts2入门]]></title>
      <url>http://CloudNetwork.cc/2017/02/10/Struts2/Struts2%E5%85%A5%E9%97%A8/Struts2%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<h3 id="Struts2简介"><a href="#Struts2简介" class="headerlink" title="Struts2简介"></a>Struts2简介</h3><font size="4">Apache Struts 2是一个用于开发Java EE网络应用程序的开源Web应用框架。它利用并扩展了Java Servlet API</font>

<font color="red" size="4">注意：它只是表现层（MVC）框架。</font>

<font size="4">Struts2 是一个非常优秀的MVC框架，基于Model2 设计模型，由传统Struts1和WebWork两个经典框架发展而来。</font>

<a id="more"></a>
<font size="4">Strust2 核心功能<br><br>- 允许POJO（Plain Old Java Objects）对象 作为Action<br>- Action的execute 方法不再与Servlet API耦合，更易测试<br>- 支持更多视图技术（JSP、FreeMarker、Velocity）<br>- 基于Spring AOP思想的拦截器机制，更易扩展<br>- 更强大、更易用输入校验功能<br><br></font>

<hr>
<h3 id="基本的MVC架构"><a href="#基本的MVC架构" class="headerlink" title="基本的MVC架构"></a>基本的MVC架构</h3><font size="4">模型-视图-控制器或通常被称为 MVC，是一种用于开发 web 应用程序的软件设计模式。模型-视图-控制器模式由以下三个部分组成：<br><br><br>- Model - 模式的最低层，负责维护数据。<br><br><br>- View - 负责显示全部或部分的数据给用户。<br><br><br>- Controller - 控制模型和视图之间的交互的软件代码。<br><br></font><br><font size="4">MVC 是受欢迎的，是因为它把应用逻辑从用户接口层中分离，而且支持关注点的分离。在这里，控制器接收应用程序的所有请求，然后与模型一起工作准备好视图需要的任何数据。然后视图使用控制器准备好的数据来生成最终正式的响应。MVC 抽象可以用图形表示，如下所示。</font>

<p><img src="https://github.com/CloudNetworking/CloudNetworking.github.io/blob/master/image/500px-MVC-Process.svg.png?raw=true" alt=""></p>
<font size="5">模型</font><br><br><br><font size="4">模型负责管理应用程序的数据。它响应来自视图的请求，而且它也响应来自控制器的指令进行更新自身。</font><br><br><br><font size="5">视图</font><br><br><br><font size="4">在一个特定格式中数据的展示由一个控制器的决定引发来呈现该数据。它们是基于模板系统的脚本，如 JSP，ASP，PHP，而且它们很容易与 AJAX 技术进行集成。</font><br><br><br><font size="5">控制器</font><br><br><br><font size="4">控制器负责响应用户的输入和执行数据模型对象的交互。控制器接收输入，验证输入，然后执行修改数据模型状态的业务操作。</font>


<hr>
<h3 id="搭建Struts2开发环境"><a href="#搭建Struts2开发环境" class="headerlink" title="搭建Struts2开发环境"></a>搭建Struts2开发环境</h3><font size="4">1、 下载Struts2开发包</font>


<blockquote>
<p><a href="http://struts.apache.org" target="_blank" rel="external">http://struts.apache.org</a></p>
</blockquote>
<font size="4">2、 搭建开发环境<br><br><font size="4">　　　2.1、拷贝必要jar包到classpath（lib）中<br><br>　　　　　　拷贝哪些jar包？<br><br>　　　　找到Struts2自带的例子中，struts-blank的war包，在它的\WEB-INF\lib目录下的jar包全拷贝。<br></font>

<font size="4">　　　2.2、建立Struts2的配置文件<br><br>　　　　　src目录下,建立一个默认名称为struts.xml的配置文件。<br></font>

<font size="4">　　　2.3、配置控制器—&gt;过滤器<br><br>　　　　　a、配置位置：在web.xml中<br><br>　　　　　b、配置什么： struts2已经写好了的一个过滤器。<br></font>

<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span></div><div class="line">	org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</div><div class="line">		<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></div><div class="line">`</div></pre></td></tr></table></figure>
<font　size="4">　　　底层：读取struts.xml文件（xml解析），控制页面的跳转<br><br>　　　 2.4、验证是否成功<br>            部署应用，启动Tomcat，不报错表示搭建成功。<br></font　size="4"></font>

<hr>
<h3 id="创建一个Struts2应用的步骤"><a href="#创建一个Struts2应用的步骤" class="headerlink" title="创建一个Struts2应用的步骤"></a>创建一个Struts2应用的步骤</h3><ol>
<li>创建WEB 工程</li>
<li>导入必要jar包</li>
<li>编写JSP 页面</li>
<li>编写Action 服务器端处理逻辑</li>
<li>进行框架配置web.xml、struts.xml</li>
<li>运行测试</li>
</ol>
<hr>
<h3 id="Struts2应用的执行流程"><a href="#Struts2应用的执行流程" class="headerlink" title="Struts2应用的执行流程"></a>Struts2应用的执行流程</h3><p><img src="https://github.com/CloudNetworking/CloudNetworking.github.io/blob/master/image/Struts2%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B1.png?raw=true" alt=""><br><img src="https://github.com/CloudNetworking/CloudNetworking.github.io/blob/master/image/Struts2%E6%89%A7%E8%A1%8C%E6%B5%81%E7%A8%8B2.png?raw=true" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Struts2 </category>
            
            <category> Struts2入门 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java框架 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[分享一本学习Struts2的书籍]]></title>
      <url>http://CloudNetwork.cc/2017/02/10/Struts2/%E5%88%86%E4%BA%ABStruts2%E7%94%B5%E5%AD%90%E4%B9%A6/</url>
      <content type="html"><![CDATA[<hr>
<h2 id="Struts-2-in-Action"><a href="#Struts-2-in-Action" class="headerlink" title="　Struts 2 in Action"></a>　Struts 2 in Action</h2><h2 id="Struts-2-实战"><a href="#Struts-2-实战" class="headerlink" title="　　　　Struts 2 实战"></a>　　　　Struts 2 实战</h2><h4 id="本书结合实例介绍了-Struts-2框架，主要内容包括-Action、Result、Interceptor等框架组件，基于注解的配置选项等新特征，Struts-2插件-FreeMarker，如何从-Struts-1和-WebWork-2迁移到-Struts-2，Ajax标签、-Spring框架集成等新特性。"><a href="#本书结合实例介绍了-Struts-2框架，主要内容包括-Action、Result、Interceptor等框架组件，基于注解的配置选项等新特征，Struts-2插件-FreeMarker，如何从-Struts-1和-WebWork-2迁移到-Struts-2，Ajax标签、-Spring框架集成等新特性。" class="headerlink" title="　　本书结合实例介绍了 Struts 2框架，主要内容包括 Action、Result、Interceptor等框架组件，基于注解的配置选项等新特征，Struts 2插件 FreeMarker，如何从 Struts 1和 WebWork 2迁移到 Struts 2，Ajax标签、 Spring框架集成等新特性。"></a>　　本书结合实例介绍了 Struts 2框架，主要内容包括 Action、Result、Interceptor等框架组件，基于注解的配置选项等新特征，Struts 2插件 FreeMarker，如何从 Struts 1和 WebWork 2迁移到 Struts 2，Ajax标签、 Spring框架集成等新特性。</h4><h4 id="本书适合各层次-Java开发人员阅读和参考。"><a href="#本书适合各层次-Java开发人员阅读和参考。" class="headerlink" title="　　本书适合各层次 Java开发人员阅读和参考。"></a>　　本书适合各层次 Java开发人员阅读和参考。</h4><p><img src="https://github.com/CloudNetworking/CloudNetworking.github.io/blob/master/image/216.big.jpg?raw=true" alt=""></p>
<a id="more"></a>
<h4 id="电子书和配套示例代码-百度网盘地址："><a href="#电子书和配套示例代码-百度网盘地址：" class="headerlink" title="电子书和配套示例代码 - 百度网盘地址："></a>电子书和配套示例代码 - 百度网盘地址：</h4><blockquote>
<p>链接：<a href="http://pan.baidu.com/s/1c2IJkC4" target="_blank" rel="external">http://pan.baidu.com/s/1c2IJkC4</a> 密码：m8jv</p>
</blockquote>
<font color="grey">如果链接失效可直接在下方留言，或者邮箱：836757228@qq.com</font>]]></content>
      
        <categories>
            
            <category> Struts2 </category>
            
            <category> 电子书 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 电子书 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[创建一个Struts2应用的详细步骤]]></title>
      <url>http://CloudNetwork.cc/2017/02/09/Struts2/Struts2%E5%85%A5%E9%97%A8/%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAStruts2%E5%BA%94%E7%94%A8%E7%9A%84%E8%AF%A6%E7%BB%86%E6%AD%A5%E9%AA%A4/</url>
      <content type="html"><![CDATA[<hr>
<h4 id="创建一个Struts2应用主要有一下几个步骤"><a href="#创建一个Struts2应用主要有一下几个步骤" class="headerlink" title="创建一个Struts2应用主要有一下几个步骤"></a>创建一个Struts2应用主要有一下几个步骤</h4><h4 id="一、创建WEB-工程"><a href="#一、创建WEB-工程" class="headerlink" title="　　一、创建WEB 工程"></a>　　一、创建WEB 工程</h4><h4 id="二、导入必要jar包"><a href="#二、导入必要jar包" class="headerlink" title="　　二、导入必要jar包"></a>　　二、导入必要jar包</h4><h4 id="三、编写JSP-页面"><a href="#三、编写JSP-页面" class="headerlink" title="　　三、编写JSP 页面"></a>　　三、编写JSP 页面</h4><h4 id="四、编写Action-服务器端处理逻辑"><a href="#四、编写Action-服务器端处理逻辑" class="headerlink" title="　　四、编写Action 服务器端处理逻辑"></a>　　四、编写Action 服务器端处理逻辑</h4><h4 id="五、进行框架配置web-xml、struts-xml"><a href="#五、进行框架配置web-xml、struts-xml" class="headerlink" title="　　五、进行框架配置web.xml、struts.xml"></a>　　五、进行框架配置web.xml、struts.xml</h4><h4 id="六、运行测试"><a href="#六、运行测试" class="headerlink" title="　　六、运行测试"></a>　　六、运行测试</h4><a id="more"></a>
<h3 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h3><hr>
<h2 id="二、导入必要jar包-1"><a href="#二、导入必要jar包-1" class="headerlink" title="二、导入必要jar包"></a>二、导入必要jar包</h2><ul>
<li>Struts运行必要jar包</li>
<li>struts2-core-2.3.1.1.jar：Struts 2框架的核心类库</li>
<li>xwork-core-2.3.1.1.jar：Command模式框架,WebWork和Struts2都基于xwork </li>
<li>ognl-3.0.3.jar：对象图导航语言(Object Graph Navigation Language),  struts2框架通过其读写对象的属性</li>
<li>freemarker-2.3.18.jar：Struts 2的UI标签的模板使用FreeMarker编写</li>
<li>commons-logging-1.1.x.jar：ASF出品的日志包，Struts 2框架使用这个日志包来支持Log4J和JDK 1.4+的日志记录。</li>
<li>commons-fileupload-1.2.2.jar： 文件上传组件，2.1.6版本后需要加入此文件</li>
<li>commons-io-2.0.1.jar：传文件依赖的jar包</li>
<li>commons-lang-2.5.jar：对java.lang包的增强</li>
</ul>
<blockquote>
<p>开发中为了方便导入，可以使用app/struts2-blank.war 携带jar包</p>
</blockquote>
<hr>
<h2 id="三、编写JSP-页面-1"><a href="#三、编写JSP-页面-1" class="headerlink" title="三、编写JSP 页面"></a>三、编写JSP 页面</h2><h3 id="helloword-jsp-（发起请求页面）"><a href="#helloword-jsp-（发起请求页面）" class="headerlink" title="helloword.jsp （发起请求页面）"></a>helloword.jsp （发起请求页面）</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/hello.action"</span>&gt;</span> helloworld<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="添加对Struts2-框架的访问链接，默认情况下框架接受以-action请求，并进行处理。"><a href="#添加对Struts2-框架的访问链接，默认情况下框架接受以-action请求，并进行处理。" class="headerlink" title="添加对Struts2 框架的访问链接，默认情况下框架接受以.action请求，并进行处理。"></a>添加对Struts2 框架的访问链接，默认情况下框架接受以.action请求，并进行处理。</h3><h3 id="success-jsp-（结果页面）"><a href="#success-jsp-（结果页面）" class="headerlink" title="success.jsp  （结果页面）"></a>success.jsp  （结果页面）</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好，Struts2<span class="tag">&lt;<span class="name">h1</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="结果页面显示-struts2框架访问成功"><a href="#结果页面显示-struts2框架访问成功" class="headerlink" title="结果页面显示 struts2框架访问成功"></a>结果页面显示 struts2框架访问成功</h3><hr>
<h2 id="四、编写Action-服务器端处理逻辑-1"><a href="#四、编写Action-服务器端处理逻辑-1" class="headerlink" title="四、编写Action 服务器端处理逻辑"></a>四、编写Action 服务器端处理逻辑</h2><h4 id="编写Action处理访问Struts2框架请求"><a href="#编写Action处理访问Struts2框架请求" class="headerlink" title="编写Action处理访问Struts2框架请求"></a>编写Action处理访问Struts2框架请求</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloAction</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span></span>&#123;</div><div class="line">		System.out.println(<span class="string">"hello world"</span>);</div><div class="line">		<span class="keyword">return</span> <span class="string">"success"</span>; <span class="comment">// 结果页面命名</span></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="struts2-的Action类似以前编写的Servlet程序，可以处理用户提交请求，但是Struts2的Action可以POJO对象"><a href="#struts2-的Action类似以前编写的Servlet程序，可以处理用户提交请求，但是Struts2的Action可以POJO对象" class="headerlink" title="struts2 的Action类似以前编写的Servlet程序，可以处理用户提交请求，但是Struts2的Action可以POJO对象"></a>struts2 的Action类似以前编写的Servlet程序，可以处理用户提交请求，但是Struts2的Action可以POJO对象</h4><hr>
<h2 id="五、进行框架配置web-xml、struts-xml-1"><a href="#五、进行框架配置web-xml、struts-xml-1" class="headerlink" title="五、进行框架配置web.xml、struts.xml"></a>五、进行框架配置web.xml、struts.xml</h2><h3 id="配置Struts2核心控制器"><a href="#配置Struts2核心控制器" class="headerlink" title="配置Struts2核心控制器"></a>配置Struts2核心控制器</h3><h3 id="配置web-xml"><a href="#配置web-xml" class="headerlink" title="配置web.xml"></a>配置web.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span></div><div class="line">	org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</div><div class="line">		<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></div><div class="line">`</div></pre></td></tr></table></figure>
<h4 id="过滤器配置-但是struts2默认处理-action结尾请求，分发到相应的action类"><a href="#过滤器配置-但是struts2默认处理-action结尾请求，分发到相应的action类" class="headerlink" title="过滤器配置/* ,但是struts2默认处理.action结尾请求，分发到相应的action类"></a>过滤器配置/* ,但是struts2默认处理.action结尾请求，分发到相应的action类</h4><h3 id="配置struts-xml"><a href="#配置struts-xml" class="headerlink" title="配置struts.xml"></a>配置struts.xml</h3><h4 id="在src目录下建立struts-xml"><a href="#在src目录下建立struts-xml" class="headerlink" title="在src目录下建立struts.xml"></a>在src目录下建立struts.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</div><div class="line"><span class="meta">&lt;!DOCTYPE struts PUBLIC</span></div><div class="line">	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"</div><div class="line">	"http://struts.apache.org/dtds/struts-2.3.dtd"&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="comment">&lt;!-- 动态调用 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">"struts.enable.DynamicMethodInvocation"</span> <span class="attr">value</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">constant</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--开发者模式  --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">"struts.devMode"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></div><div class="line">    </div><div class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"default"</span> <span class="attr">namespace</span>=<span class="string">"/"</span> <span class="attr">extends</span>=<span class="string">"struts-default"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">class</span>=<span class="string">"com.qf.action.UserAction"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></div></pre></td></tr></table></figure>
<hr>
]]></content>
      
        <categories>
            
            <category> Struts2 </category>
            
            <category> Struts2入门 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Struts2 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Action的动态方法调用]]></title>
      <url>http://CloudNetwork.cc/2017/02/09/Struts2/%E8%AE%BF%E9%97%AEAction/Action%E7%9A%84%E5%8A%A8%E6%80%81%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8/</url>
      <content type="html"><![CDATA[<a id="more"></a>
<h4 id="通过url动态指定调用Action哪个方法而无需配置的method属性"><a href="#通过url动态指定调用Action哪个方法而无需配置的method属性" class="headerlink" title="通过url动态指定调用Action哪个方法而无需配置的method属性"></a>通过url动态指定调用Action哪个方法而无需配置<action>的method属性</action></h4><h4 id="开启动态调用"><a href="#开启动态调用" class="headerlink" title="开启动态调用:"></a>开启动态调用:</h4><pre><code>&lt;constant name=&quot;struts.enable.DynamicMethodInvocation&quot; value=&quot;true&quot;&gt;&lt;/constant&gt;
</code></pre><h4 id="通过-i方法名-指定调用Action哪个方法"><a href="#通过-i方法名-指定调用Action哪个方法" class="headerlink" title="通过 i方法名  指定调用Action哪个方法"></a>通过 <strong>i方法名</strong>  指定调用Action哪个方法</h4><pre><code>localhost:8080/struts01/user!add.action
</code></pre><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">"user"</span>   <span class="attr">class</span>=<span class="string">"cc.cn.action.UserAction"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">action</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="struts-xml没有指定method属性"><a href="#struts-xml没有指定method属性" class="headerlink" title="struts.xml没有指定method属性"></a>struts.xml没有指定method属性</h4><h4 id="但是-user-add-action-就会执行-UserAction-的-add-方法"><a href="#但是-user-add-action-就会执行-UserAction-的-add-方法" class="headerlink" title="但是 user!add.action 就会执行 UserAction 的 add 方法"></a>但是 user!add.action 就会执行 UserAction 的 add 方法</h4>]]></content>
      
        <categories>
            
            <category> Struts2 </category>
            
            <category> 访问Action </category>
            
        </categories>
        
        
        <tags>
            
            <tag> aa </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[truts]]></title>
      <url>http://CloudNetwork.cc/2013/07/13/Struts2/struts/</url>
      <content type="html"><![CDATA[<p>This is Icarus, a free responsive, high resolution and pretty flexible theme for you to use to write about things you love. Make sure to check all the examples out! To download this theme or to check the full feature list, just go here. Feel free to leave a comment there if you digg it!</p>
<p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.</p>
<a id="more"></a>
<table>
<thead>
<tr>
<th>水果</th>
<th style="text-align:right">价格</th>
<th style="text-align:center">数量</th>
</tr>
</thead>
<tbody>
<tr>
<td>香蕉</td>
<td style="text-align:right">$1</td>
<td style="text-align:center">5</td>
</tr>
<tr>
<td>苹果</td>
<td style="text-align:right">$1</td>
<td style="text-align:center">6</td>
</tr>
<tr>
<td>草莓</td>
<td style="text-align:right">$1</td>
<td style="text-align:center">7</td>
</tr>
<tr>
<td>常量名</td>
<td style="text-align:right">常量值</td>
<td style="text-align:center">说明</td>
</tr>
<tr>
<td>struts.i18n.encoding</td>
<td style="text-align:right">UTF-8</td>
<td style="text-align:center">应用中使用的编码</td>
</tr>
<tr>
<td>struts.objectFactory.spring.autoWire</td>
<td style="text-align:right">name</td>
<td style="text-align:center">和spring框架整合有关</td>
</tr>
<tr>
<td>struts.multipart.parser</td>
<td style="text-align:right">jakarta</td>
<td style="text-align:center">指定文件上传用的组件</td>
</tr>
<tr>
<td>struts.multipart.maxSize</td>
<td style="text-align:right">2097152</td>
<td style="text-align:center">文件上传总文件大小限制：2M</td>
</tr>
<tr>
<td>struts.action.extension    action</td>
<td style="text-align:right">,,</td>
<td style="text-align:center">能进入Struts2框架内部的url地址后缀名。多个值用逗号分隔</td>
</tr>
<tr>
<td>struts.enable.DynamicMethodInvocation</td>
<td style="text-align:right">false</td>
<td style="text-align:center">是否允许动态方法调用</td>
</tr>
<tr>
<td>struts.devMode</td>
<td style="text-align:right">false</td>
<td style="text-align:center">是否是开发模式。开发模式：改了配置文件，不需要重启。输出更多的错误信息。开发阶段建议为true。</td>
</tr>
<tr>
<td>struts.ui.theme</td>
<td style="text-align:right">xhtml</td>
<td style="text-align:center">页面展示用的主题</td>
</tr>
</tbody>
</table>
<p>“Dolores eos qui ratione voluptatem sequi nesciunt. Lorem ipsum dolor.”Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?</p>
<p>At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio.</p>
<p>It’s like a language. You learn the alphabet, which are the scales. You learn sentences, which are the chords. And then you talk extemporaneously with the horn. It’s a wonderful thing to speak extemporaneously, which is something I’ve never gotten the hang of. But musically I love to talk just off the top of my head. And that’s what jazz music is all about.</p>
<p>Stan Getz</p>
<p>Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.</p>
<p>Eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.</p>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
            <category> Hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JavaEE </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
